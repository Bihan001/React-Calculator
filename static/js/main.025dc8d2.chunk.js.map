{"version":3,"sources":["ValButton.jsx","CalculatorBoard.jsx","App.jsx","serviceWorker.js","index.js"],"names":["ValButton","props","handleClick","bind","this","numberdisplay","value","className","onClick","Component","CalculatorBoard","state","display","innercalculate","evaluate","clear","number","length","newdisplay","substr","newinnercalculate","setState","curState","result","eval","toString","id","key","valbuttons","map","b","calcbuttons","c","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.025dc8d2.chunk.js","sourcesContent":["import React,{Component} from \"react\";\r\nimport \"./ValButton.css\"\r\nclass ValButton extends Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.handleClick=this.handleClick.bind(this);\r\n    }\r\n    handleClick()\r\n    {\r\n        this.props.numberdisplay(this.props.value);\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n        <div className=\"ValButton\" onClick={this.handleClick}>\r\n            {this.props.value}\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default ValButton;","import React,{Component} from \"react\";\r\nimport ValButton from \"./ValButton\";\r\nimport \"./CalculatorBoard.css\"\r\nclass CalculatorBoard extends Component\r\n{\r\n    static defaultProps={\r\n        valbuttons:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\".\",\"0\"],\r\n        calcbuttons:[\"<\",\"+\",\"-\",\"^\",\"/\",\"*\",\"%\"]\r\n    }\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            display:\"\",\r\n            innercalculate:\"\"\r\n           \r\n\r\n        }\r\n        this.numberdisplay=this.numberdisplay.bind(this);\r\n        this.evaluate=this.evaluate.bind(this);\r\n        this.clear=this.clear.bind(this);\r\n    }\r\n    numberdisplay(number)\r\n    {\r\n        //console.log(eval(this.state.display*number));\r\n       \r\n        if(number===\"<\")\r\n        {\r\n                var lastval=this.state.display[this.state.display.length-1];\r\n                if(lastval!==\"^\")\r\n                {\r\n                    var newdisplay=this.state.display.substr(0,(this.state.display.length)-1);\r\n                    var newinnercalculate=this.state.innercalculate.substr(0,(this.state.innercalculate.length)-1);\r\n                    \r\n\r\n                      this.setState({\r\n                          display:newdisplay,\r\n                          innercalculate:newinnercalculate\r\n                      })\r\n\r\n                }\r\n                else\r\n                {\r\n\r\n                    \r\n                    var newdisplay=this.state.display.substr(0,(this.state.display.length)-1);\r\n                    var newinnercalculate=this.state.innercalculate.substr(0,(this.state.innercalculate.length)-2);\r\n                    \r\n\r\n                      this.setState({\r\n                          display:newdisplay,\r\n                          innercalculate:newinnercalculate\r\n                      })\r\n\r\n                }\r\n                \r\n                \r\n        }\r\n        else if(number===\"^\")\r\n        {\r\n            this.setState(curState=>(\r\n                {\r\n                    display:`${curState.display}${number}`,\r\n                    innercalculate:`${curState.display}**`\r\n                }\r\n            )) \r\n        }\r\n        else\r\n        {\r\n           \r\n            this.setState(curState=>(\r\n                {\r\n                    display:`${curState.display}${number}`,\r\n                    innercalculate:`${curState.innercalculate}${number}`\r\n                }\r\n            ))\r\n            \r\n        }\r\n       \r\n    }\r\n    evaluate()\r\n    {\r\n             try{\r\n                var result=eval(this.state.innercalculate);\r\n                this.setState(\r\n                    {\r\n                    display:result.toString(),\r\n                    innercalculate:result.toString()\r\n                    })\r\n                }\r\n                catch{\r\n                    this.setState(\r\n                        {\r\n                            display:this.state.display,\r\n                            innercalculate:this.state.innercalculate\r\n                        }\r\n                    )\r\n                }\r\n        \r\n    }\r\n    clear()\r\n    {\r\n        this.setState({\r\n            display:\"\",\r\n            innercalculate:\"\"\r\n        })\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div  id=\"CalculatorBoard\">\r\n                    <div className=\"CalculatorBoard-display\">\r\n                        {this.state.display}\r\n                    </div>\r\n                    <div className=\"container CLR\">\r\n                        <div className=\"Closing-Braces\">\r\n                            <div ><ValButton  key=\"(\" numberdisplay={this.numberdisplay} value=\"(\"/></div>\r\n                            <div ><ValButton key=\")\" numberdisplay={this.numberdisplay} value=\")\"/></div>\r\n                        </div>\r\n\r\n                         <div className=\"CLR-button\" onClick={this.clear}>CLR</div>\r\n                    </div>\r\n                      \r\n                        <div className=\"container\" id=\"Flexbox\">\r\n                            <div className=\"row ValButtons-div\">\r\n                            \r\n                                \r\n                                    {this.props.valbuttons.map(b=>\r\n                                            <div className=\"col-4 column\">\r\n                                                    <div id=\"Number-Buttons\">\r\n                                                        <ValButton key={b} numberdisplay={this.numberdisplay} value={b}/>\r\n                                                    \r\n                                                    </div>\r\n                                                    \r\n                                            </div>\r\n                                    )}\r\n                                    <div className=\"col-4 column\">\r\n                                        <div id=\"Number-Buttons\">\r\n                                            <div className=\"CalculatorBoard-eval-style\" onClick={this.evaluate}>=</div>\r\n                                        </div>\r\n                                        \r\n                                    </div>\r\n                                    \r\n                            \r\n                            \r\n                            </div>\r\n                            <div className=\"CalcButtons-div\" >\r\n                                <div className=\"Calc-Buttons\">\r\n                                {this.props.calcbuttons.map(c=><ValButton key={c} numberdisplay={this.numberdisplay} value={c}/>)}\r\n                                </div>\r\n                              \r\n                                \r\n                            \r\n                            </div>\r\n                        </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\nexport default CalculatorBoard;","import React from 'react';\nimport CalculatorBoard from \"./CalculatorBoard\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CalculatorBoard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}